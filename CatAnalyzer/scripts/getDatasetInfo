#!/usr/bin/env python

saveJSON = False

import sys, os

import subprocess
if subprocess.call("type xrd", shell=True, 
        stdout=subprocess.PIPE, stderr=subprocess.PIPE) != 0:
    print "Error: Need xrd command"
    sys.exit()

hostname = os.environ["HOSTNAME"]
cmd = ""
xrdbase = ''
xrdhost = ''
if "sdfarm" in hostname:
    xrdhost = 'cms-xrdr.sdfarm.kr'
    xrdbase = '/xrd'
elif "uos" in hostname:
    xrdhost = 'uosaf0007.sscc.uos.ac.kr'
    xrdbase = '/cms'
else:
    print "Hostname", hostname, "not supported"
    sys.exit()
cmd = "xrd %s ls s" % (xrdhost)

from urllib import urlopen
import csv
gdocbase = "https://docs.google.com/spreadsheets/d/1rWM3AlFKO8IJVaeoQkWZYWwSvicQ1QCXYSzH74QyZqE"
print "Retrieving dataset info from google doc..."
print "Source URL =", gdocbase
csvRD = list(csv.reader(urlopen(gdocbase + "/pub?gid=0&single=true&output=csv").readlines()))
csvMC = list(csv.reader(urlopen(gdocbase + "/pub?gid=1289302456&single=true&output=csv").readlines()))

ds = []
nameIdx = csvRD[0].index("Name")
titleIdx = csvRD[0].index("Title")
pathIdx = csvRD[0].index("Path")
lumiIdx = csvRD[0].index("Integrated luminosity (pb-1)")
for l in csvRD[1:]:
    if len(l) == 0 or len(l[0]) == 0: continue
    ds.append({'title':l[titleIdx],
               'name':l[nameIdx],
               'lumi':float(l[lumiIdx]),
               'path':l[pathIdx]})

nameIdx = csvMC[0].index("Name")
titleIdx = csvMC[0].index("Title")
pathIdx = csvMC[0].index("Path")
xsecIdx = csvMC[0].index("Cross section (pb)")
nevtIdx = csvMC[0].index("NEvent")
for l in csvMC[1:]:
    if len(l) == 0 or len(l[0]) == 0: continue
    ds.append({'title':l[titleIdx],
               'name':l[nameIdx],
               'xsec':float(l[xsecIdx]),
               'nevt':int(l[nevtIdx]),
               'path':l[pathIdx]})

def listxrd(path):
    cmd = "xrd %s ls " % xrdhost
    size = 0
    l = set()
    for x in subprocess.check_output(cmd + xrdbase + path, shell=True).strip().split('\n'):
        xx = x.split()
        if len(xx) == 0: continue
        xpath = xx[-1]
        if len(xpath) == 0: continue
        xsize = int(xx[1])
        if xpath.startswith(xrdbase): xpath = xpath[len(xrdbase):]
        if xpath in l: continue
        l.add(xpath)
        size += xsize
    return l, size

for d in ds:
    print d['name']
    pp = d['path']
    d['files'] = []
    d['size'] = 0
    for dd in listxrd(pp)[0]:
        files, size = listxrd(dd)
        d['size'] += size
        for ff in files:
            if not ff.endswith(".root"): continue
            ff = ff[len(pp)+1:]
            d['files'].append(ff)
    d['files'].sort()

outDir = os.environ["CMSSW_BASE"]+"/src/CATTools/CatAnalyzer/data"
if not os.path.exists(outDir): os.makedirs(outDir)

if saveJSON:
    import json
    f = open("%s/samples.json" % outDir, "w")
    print "Saving results to %s/samples.json" % outDir
    print>>f, json.dumps(ds)
else:
    for d in ds:
        f = open("%s/samples_%s.txt" % (outDir, d['name']), "w")
        for key in d:
            if key == "files": continue
            print>>f, "#", key, "=", d[key]
        for ff in d['files']:
            print>>f, os.path.join(d['path'], ff)
        f.close()

#print ds
