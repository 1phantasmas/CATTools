#!/usr/bin/env python

import sys, os

import subprocess
if subprocess.call("type xrd", shell=True, 
        stdout=subprocess.PIPE, stderr=subprocess.PIPE) != 0:
    print "Error: Need xrd command"
    sys.exit()

hostname = os.environ["HOSTNAME"]
cmd = ""
xrdbase = ''
xrdhost = ''
if "sdfarm" in hostname:
    xrdhost = 'cms-xrdr.sdfarm.kr'
    xrdbase = '/xrd'
elif "uos" in hostname:
    xrdhost = 'uosaf0007.sscc.uos.ac.kr'
    xrdbase = '/cms'
else:
    print "Hostname", hostname, "not supported"
    sys.exit()
cmd = "xrd %s ls %s" % (xrdhost, xrdbase)

from urllib import urlopen
import csv
gdocbase = "https://docs.google.com/spreadsheets/d/%s&single=true&output=csv"
csvRD = list(csv.reader(urlopen(gdocbase % "1rWM3AlFKO8IJVaeoQkWZYWwSvicQ1QCXYSzH74QyZqE/pub?gid=0").readlines()))
csvMC = list(csv.reader(urlopen(gdocbase % "1rWM3AlFKO8IJVaeoQkWZYWwSvicQ1QCXYSzH74QyZqE/pub?gid=1289302456").readlines()))

ds = []
titleIdx = csvRD[0].index("Title")
pathIdx = csvRD[0].index("Path")
lumiIdx = csvRD[0].index("Integrated luminosity (fb-1)")
for l in csvRD[1:]:
    if len(l) == 0 or len(l[0]) == 0: continue
    ds.append({'title':l[titleIdx],
               'lumi':l[lumiIdx],
               'path':l[pathIdx]})

nameIdx = csvMC[0].index("Name")
titleIdx = csvMC[0].index("Title")
pathIdx = csvMC[0].index("Path")
xsecIdx = csvMC[0].index("Cross section (pb)")
nevtIdx = csvMC[0].index("NEvent")
for l in csvMC[1:]:
    if len(l) == 0 or len(l[0]) == 0: continue
    ds.append({'title':l[titleIdx],
               'name':l[nameIdx],
               'xsec':l[xsecIdx],
               'nevt':l[nevtIdx],
               'path':l[pathIdx]})

for d in ds:
    p = d['path']
    ll = []#set(subprocess.check_output(cmd + p, shell=True).strip().split('\n'))
    fl = []
    size = 0
    for ff in ll:
        t = ff.strip().split()
        fname = os.path.basename(t[-1])
        if not fname.endswith('.root'): continue
        size += int(t[1])
        fl.append(fname)
    fl.sort()

    d['files'] = fl
    d['size'] = size

import json
f = open("samples.json", "w")
print>>f, json.dumps(ds)

#print ds
