#!/usr/bin/env python
import os,sys,subprocess
import time
def findrt(dir_f, f_txt):
    init_dirs = len(dir_f.split('/'))
    dir_list = []            
    for (path, dir, files) in os.walk(dir_f):
        if init_dirs == len(path.split('/')):
            for i in range(len(dir)):
                dir_list.append(dir[i].split("_")[0])
            dir_list.sort(reverse=True)
        if init_dirs < len(path.split('/')):
            if dir_list[0] in path.split('/')[init_dirs]:
                for filename in files:
                    ext = os.path.splitext(filename)[-1]
                    if ext == '.root':
                        #print("%s/%s" % (path, filename))
                        f_txt.write("%s/%s\n" % (path, filename))

## execute script location
absdes = os.getcwd()

## cmsenv excute 
os.system('scramv1 runtime -sh')

if not os.path.isdir('./texts'):
    os.mkdir('./texts')
os.chdir('./texts')
f_name = ['DYJetsToLL_M-50','TTJets_TuneCUETP8M1_13TeV-madgraphMLM','ZZ_TuneCUETP8M1_13TeV','WZ_TuneCUETP8M1_13TeV','WW_TuneCUETP8M1_13TeV','SingleMuon','DoubleMuon']
path = "/cms/scratch/CAT"
dirs = os.listdir(path)
for i in f_name:
    f_txt = open(i+".txt","w")
    for dn in dirs:
        if dn.find(i)==0:
            dirs2 = os.listdir(path+"/"+dn)
            for d2n in range(len(dirs2)):
                if (dirs2[d2n].split('_')[0] == 'v7-3-2'):
                    findrt(path+"/"+dn+"/"+dirs2[d2n],f_txt)
    f_txt.close()
os.chdir("../")
now = time.localtime()
s = "%04d%02d%02d_%02d%02d%02d" % (now.tm_year, now.tm_mon, now.tm_mday, now.tm_hour, now.tm_min, now.tm_sec)
#if not os.path.isdir("./"+s):
#    os.mkdir("./"+s)
#./create-batch --jobName MuonEG --fileList texts/MuonEG.txt --maxFiles 10 --cfg run_TtbarDiLeptonAnalyzer.py --transferDest /cms/scratch/tt8888tt/cat74/src/CATTools/CatAnalyzer/test/results/MuonE
for j in f_name:
    print j
    #batchopt = ['./create-batch','--jobName','--fileList','--maxFiles','--cfg','--transferDest']
    jobname = [s+'/'+j+"_"+s,'texts/'+j+'.txt','10','run_h2muAnalyzer.py',absdes+'/results/'+j]
    #precmd = "--jobName %s --fileList %s --maxFiles %s --cfg %s --transferDest %s" % (jobname[0],jobname[1],jobname[2],jobname[3],jobname[4])
    precmd = "--jobName %s --fileList %s --maxFiles %s --cfg %s" % (jobname[0],jobname[1],jobname[2],jobname[3])
    cmd = absdes+"/create-batch "+precmd
    print cmd
    os.system(cmd)

